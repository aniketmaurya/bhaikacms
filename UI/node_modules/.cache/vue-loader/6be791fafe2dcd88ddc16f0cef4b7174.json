{"remainingRequest":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/forms/SeasonalVideoForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/forms/SeasonalVideoForm.vue","mtime":1565089296898},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n    name:'SeasonalVideoForm',\n    computed: {\n        ...mapGetters([\n            'program'\n        ])\n\n    },\n    data() {\n       return {\n           seasonalVideo: {\n               program: {\n                   id: \"\"\n               },\n               seasonName:\"\",\n               seasonNumber:1,\n               seasonDescription:\"\",\n               seasonImgUrls: {\n                   thumbnail:\"\",\n                   avatar:\"\"\n               }\n           }\n       }\n    },\n    methods: {\n        ...mapActions([\n            'addSeason',\n            'imageUpload'\n        ]),\n        handleSubmit() {\n            this.seasonalVideo.program.id = this.program.id\n\n            this.addSeason(this.seasonalVideo).then( (resp) => {\n                if(resp) {\n                    this.$swal('','Successfully added','success')\n                    this.$router.push('/episodeForm')\n                } else {\n                    console.log(\"Something went wrong\")\n                }\n            }).catch((err) => {\n                console.log(err)\n            })\n        },\n        processFile(event,type,index) {\n            if (type=='Thumbnail') {\n                let formData = new FormData()\n                formData.append('file', event.target.files[0])\n                formData.append('filetype','image')\n                formData.append('type','Thumbnail')\n                this.imageUpload(formData).then( (resp) => {\n                    if(resp.uploadLink) {\n                        this.seasonalVideo.seasonImgUrls.thumbnail = resp.uploadLink\n                    } else {\n                        this.$swal('File type not supported')\n                    }\n                }).catch( (err) => {\n                    console.log(err)\n                })\n            } else {\n                let formData = new FormData()\n                formData.append('file', event.target.files[0])\n                formData.append('filetype','image')\n                formData.append('type','Avatar')\n                this.imageUpload(formData).then( (resp) => {\n                    if(resp.uploadLink) {\n                        this.seasonalVideo.seasonImgUrls.avatar = resp.uploadLink\n                    } else {\n                        this.$swal('File type not supported')\n                    }\n                }).catch( (err) => {\n                    console.log(err)\n                })\n            }\n             \n        }\n\n    },\n    \n}\n",{"version":3,"sources":["SeasonalVideoForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA","file":"SeasonalVideoForm.vue","sourceRoot":"src/views/forms","sourcesContent":["<template>\n<div class=\"box\">\n    <form class=\"program-form\" style=\"padding:15px;\" @submit.prevent=\"handleSubmit()\">\n        <h2 class=\"form-heading\">SEASONAL VIDEO FORM</h2>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-3\">\n                <label>Program type</label>\n                <input v-model=\"program.type\" type=\"text\" class=\"form-control \" required readOnly>\n            </div>\n            <div class=\"form-group col-md-5\">\n                <label for=\"inputPassword4\">Season name</label>\n                <input v-model=\"seasonalVideo.seasonName\"  type=\"text\" class=\"form-control\" required>\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"inputPassword4\">Season Number</label>\n                <input v-model=\"seasonalVideo.seasonNumber\"  type=\"text\" class=\"form-control\" required>\n            </div>\n        </div>\n        <div class=\"form-group col-md-12\">\n            <label for=\"inputAddress\">Description</label>\n            <input v-model=\"seasonalVideo.seasonDescription\" type=\"text\" class=\"form-control\" required>\n        </div>\n        <div class=\"form-group col-md-12\">\n            <div class=\"col-md-6\">\n                <input @change=\"processFile($event,'Thumbnail')\" type=\"file\" class=\"form-control\" required>\n            </div>\n            <div class=\"col-md-6\">\n                <input @change=\"processFile($event,'Avatar')\" type=\"file\" class=\"form-control\" required>\n            </div>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Save video</button>\n    </form>\n</div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n    name:'SeasonalVideoForm',\n    computed: {\n        ...mapGetters([\n            'program'\n        ])\n\n    },\n    data() {\n       return {\n           seasonalVideo: {\n               program: {\n                   id: \"\"\n               },\n               seasonName:\"\",\n               seasonNumber:1,\n               seasonDescription:\"\",\n               seasonImgUrls: {\n                   thumbnail:\"\",\n                   avatar:\"\"\n               }\n           }\n       }\n    },\n    methods: {\n        ...mapActions([\n            'addSeason',\n            'imageUpload'\n        ]),\n        handleSubmit() {\n            this.seasonalVideo.program.id = this.program.id\n\n            this.addSeason(this.seasonalVideo).then( (resp) => {\n                if(resp) {\n                    this.$swal('','Successfully added','success')\n                    this.$router.push('/episodeForm')\n                } else {\n                    console.log(\"Something went wrong\")\n                }\n            }).catch((err) => {\n                console.log(err)\n            })\n        },\n        processFile(event,type,index) {\n            if (type=='Thumbnail') {\n                let formData = new FormData()\n                formData.append('file', event.target.files[0])\n                formData.append('filetype','image')\n                formData.append('type','Thumbnail')\n                this.imageUpload(formData).then( (resp) => {\n                    if(resp.uploadLink) {\n                        this.seasonalVideo.seasonImgUrls.thumbnail = resp.uploadLink\n                    } else {\n                        this.$swal('File type not supported')\n                    }\n                }).catch( (err) => {\n                    console.log(err)\n                })\n            } else {\n                let formData = new FormData()\n                formData.append('file', event.target.files[0])\n                formData.append('filetype','image')\n                formData.append('type','Avatar')\n                this.imageUpload(formData).then( (resp) => {\n                    if(resp.uploadLink) {\n                        this.seasonalVideo.seasonImgUrls.avatar = resp.uploadLink\n                    } else {\n                        this.$swal('File type not supported')\n                    }\n                }).catch( (err) => {\n                    console.log(err)\n                })\n            }\n             \n        }\n\n    },\n    \n}\n</script>\n\n<style>\n.box {\n    padding:20px;\n    margin:20px;\n    border-radius: 10px;\n\tbox-shadow: 0px 8px 20px 0px rgba(0, 0, 0, 0.15);\n}\n.form-heading {\n    text-align:center;\n    color: #2980B9;\n}\n</style>\n"]}]}
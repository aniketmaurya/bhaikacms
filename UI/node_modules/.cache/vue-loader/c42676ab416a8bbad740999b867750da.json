{"remainingRequest":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/Program.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/Program.vue","mtime":1565155675400},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport VueTagsInput from '@johmun/vue-tags-input';\n\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n    name:'Program',\n    computed:{\n        ...mapGetters([\n            'languages',\n            'getStackOfCategories'\n        ])\n    },\n    component:{\n        VueTagsInput\n    },\n    data() {\n        return {\n            program: {\n                type:\"\",\n                name:\"\",\n                description:\"\",\n                keywords:\"\",\n                parentalRating:\"\",\n                languages:\"\",\n                startDate:\"\",\n                expiryDate:\"\",\n                category: {\n                  id: \"1\",\n                },\n                imgUrls: {\n                    thumbnail: \"\",\n                    avatar: \"\",\n                },\n                userId:null,\n                userEmail:\"\",\n            },\n            tag:'',\n            tags: [],\n        }\n    },\n    methods: {\n        ...mapActions([\n            'addProgram',\n            'imageUpload',\n            'getLanguages'\n        ]),\n        init() {\n            if (this.$route.params.name == \"singleVideo\") {\n                this.program.type = \"Single video program\"\n            }\n            else if (this.$route.params.name == \"multiVideo\") {\n                this.program.type = \"Multi video program\"\n            }\n            else {\n                this.program.type = \"Seasonal video program\"\n            }\n            this.getLanguages()\n        },\n        handleSubmit() {\n            //change date to long\n            this.program.startDate = this.convertDateToLong(new Date(this.program.startDate))\n            this.program.expiryDate = this.convertDateToLong(new Date(this.program.expiryDate))\n            this.program.userId = this.$session.get('userId')\n            this.program.userEmail = this.$session.get('email')\n\n            //adding program to database \n            this.addProgram(this.program).then( (resp) => {\n                this.$swal('','Successfully added','success')\n                if (this.$route.params.name == \"singleVideo\") {\n                    this.$router.push('/singleVideoForm')\n                }\n                if (this.$route.params.name == \"multiVideo\") {\n                    this.$router.push('/multiVideoForm')\n                }\n                if (this.$route.params.name == \"seasonalVideo\") {\n                    this.$router.push('/seasonalVideoForm')\n                }\n            }).catch( (err) => {\n                console.log(err)\n            })\n\n        },\n        convertDateToLong(date) {\n            return date.getTime()\n        },\n        processFile(event,type) {\n            debugger\n            if (type=='Thumbnail') {\n                let formData = new FormData()\n                formData.append('file', event.target.files[0])\n                formData.append('filetype','image')\n                formData.append('type','Thumbnail')\n                this.imageUpload(formData).then( (resp) => {\n                    if(resp.uploadLink!=\"\") {\n                        this.program.imgUrls.thumbnail = resp.uploadLink\n                    } else {\n                        this.$swal(resp.message)\n                    }\n                }).catch( (err) => {\n                    console.log(err)\n                })\n            } else {\n                let formData = new FormData()\n                formData.append('file', event.target.files[0])\n                formData.append('filetype','image')\n                formData.append('type','Avatar')\n                this.imageUpload(formData).then( (resp) => {\n                    if(resp.uploadLink) {\n                        this.program.imgUrls.avatar = resp.uploadLink\n                    } else {\n                        this.$swal('File type not supported')\n                    }\n                }).catch( (err) => {\n                    console.log(err)\n                })\n            }\n             \n        }\n\n    },\n    mounted() {\n        this.init()\n    }\n    \n}\n",{"version":3,"sources":["Program.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Program.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div class=\"box\">\n    <form class=\"program-form\" style=\"padding:15px;\" @submit.prevent=\"handleSubmit()\">\n        <h2 class=\"form-heading\">PROGRAM FORM</h2>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n                <label>Program type</label>\n                <input v-model=\"program.type\" type=\"text\" class=\"form-control \" required readOnly>\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label for=\"inputPassword4\">Program name</label>\n                <input v-model=\"program.name\"  type=\"text\" class=\"form-control\" required>\n            </div>\n        </div>\n        <div class=\"form-group col-md-12\">\n            <label for=\"inputAddress\">Description</label>\n            <input v-model=\"program.description\"  type=\"text\" class=\"form-control\" required>\n        </div>\n        <div class=\"form-group col-md-12\">\n            <label for=\"inputAddress2\">Keywords</label>\n            <vue-tags-input v-model=\"tag\" :tags=\"tags\" @tags-changed=\"newTags => tags = newTags\"/>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n                <label for=\"inputCity\">Parental rating</label>\n                <select class=\"form-control\" v-model=\"program.parentalRating\">\n                    <option value=\"7\">7+</option>\n                    <option value=\"13\">13+</option>\n                    <option value=\"18\">18+</option>\n                    <option value=\"all\">all</option>\n                </select>\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label for=\"inputState\">Language</label>\n                <select class=\"form-control\" v-model=\"program.languages\">\n                    <option v-for=\"language in languages\" :key=\"language.name\" :value=\"language.name\">{{ language.name }}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n                <label for=\"inputCity\">Start date</label>\n                <input  v-model=\"program.startDate\" type=\"date\" class=\"form-control\" required>\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"inputZip\">Expiry date</label>\n                <input v-model=\"program.expiryDate\" type=\"date\" class=\"form-control\" required>\n            </div>\n             <div class=\"form-group col-md-4\">\n                <label for=\"inputState\">Category</label>\n                <select id=\"inputState\" class=\"form-control\">\n                    <option v-for=\"element in getStackOfCategories\" :key=\"element\">{{ element }}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n                <label>Thumbnail</label>\n                <input @change=\"processFile($event,'Thumbnail')\" type=\"file\" class=\"form-control\" required>\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label>Avatar</label>\n                <input @change=\"processFile($event,'Avatar')\" type=\"file\" class=\"form-control\" required>\n            </div>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Save program</button>\n    </form>\n</div>   \n</template>\n\n<script>\n\nimport VueTagsInput from '@johmun/vue-tags-input';\n\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n    name:'Program',\n    computed:{\n        ...mapGetters([\n            'languages',\n            'getStackOfCategories'\n        ])\n    },\n    component:{\n        VueTagsInput\n    },\n    data() {\n        return {\n            program: {\n                type:\"\",\n                name:\"\",\n                description:\"\",\n                keywords:\"\",\n                parentalRating:\"\",\n                languages:\"\",\n                startDate:\"\",\n                expiryDate:\"\",\n                category: {\n                  id: \"1\",\n                },\n                imgUrls: {\n                    thumbnail: \"\",\n                    avatar: \"\",\n                },\n                userId:null,\n                userEmail:\"\",\n            },\n            tag:'',\n            tags: [],\n        }\n    },\n    methods: {\n        ...mapActions([\n            'addProgram',\n            'imageUpload',\n            'getLanguages'\n        ]),\n        init() {\n            if (this.$route.params.name == \"singleVideo\") {\n                this.program.type = \"Single video program\"\n            }\n            else if (this.$route.params.name == \"multiVideo\") {\n                this.program.type = \"Multi video program\"\n            }\n            else {\n                this.program.type = \"Seasonal video program\"\n            }\n            this.getLanguages()\n        },\n        handleSubmit() {\n            //change date to long\n            this.program.startDate = this.convertDateToLong(new Date(this.program.startDate))\n            this.program.expiryDate = this.convertDateToLong(new Date(this.program.expiryDate))\n            this.program.userId = this.$session.get('userId')\n            this.program.userEmail = this.$session.get('email')\n\n            //adding program to database \n            this.addProgram(this.program).then( (resp) => {\n                this.$swal('','Successfully added','success')\n                if (this.$route.params.name == \"singleVideo\") {\n                    this.$router.push('/singleVideoForm')\n                }\n                if (this.$route.params.name == \"multiVideo\") {\n                    this.$router.push('/multiVideoForm')\n                }\n                if (this.$route.params.name == \"seasonalVideo\") {\n                    this.$router.push('/seasonalVideoForm')\n                }\n            }).catch( (err) => {\n                console.log(err)\n            })\n\n        },\n        convertDateToLong(date) {\n            return date.getTime()\n        },\n        processFile(event,type) {\n            debugger\n            if (type=='Thumbnail') {\n                let formData = new FormData()\n                formData.append('file', event.target.files[0])\n                formData.append('filetype','image')\n                formData.append('type','Thumbnail')\n                this.imageUpload(formData).then( (resp) => {\n                    if(resp.uploadLink!=\"\") {\n                        this.program.imgUrls.thumbnail = resp.uploadLink\n                    } else {\n                        this.$swal(resp.message)\n                    }\n                }).catch( (err) => {\n                    console.log(err)\n                })\n            } else {\n                let formData = new FormData()\n                formData.append('file', event.target.files[0])\n                formData.append('filetype','image')\n                formData.append('type','Avatar')\n                this.imageUpload(formData).then( (resp) => {\n                    if(resp.uploadLink) {\n                        this.program.imgUrls.avatar = resp.uploadLink\n                    } else {\n                        this.$swal('File type not supported')\n                    }\n                }).catch( (err) => {\n                    console.log(err)\n                })\n            }\n             \n        }\n\n    },\n    mounted() {\n        this.init()\n    }\n    \n}\n</script>\n\n<style>\n.box {\n    padding:20px;\n    margin:20px;\n    border-radius: 10px;\n\tbox-shadow: 0px 8px 20px 0px rgba(0, 0, 0, 0.15);\n}\n.form-heading {\n    text-align:center;\n    color: #2980B9;\n}\n\n</style>\n"]}]}
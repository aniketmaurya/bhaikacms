{"remainingRequest":"/Users/sumansaurav/Documents/bhaikacms/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sumansaurav/Documents/bhaikacms/src/views/Episodes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sumansaurav/Documents/bhaikacms/src/views/Episodes.vue","mtime":1564955628339},{"path":"/Users/sumansaurav/Documents/bhaikacms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sumansaurav/Documents/bhaikacms/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sumansaurav/Documents/bhaikacms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sumansaurav/Documents/bhaikacms/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n    name:'Episodes',\n    computed: {\n        ...mapGetters([\n            'episodes'\n        ])\n    },\n    data() {\n        return {\n            page: {\n                seasonId:\"\",\n                pageNumber:0,\n                pageSize:5\n            },\n            episodeData: {\n                id:\"\",\n                // userId:\"\"\n            }\n        }\n    },\n    methods: {\n        ...mapActions([\n            'getEpisodesBySeason',\n            'deleteEpisodeById'\n        ]),\n        init() {\n            this.page.seasonId = this.$route.params.id\n            this.getEpisodesBySeason(this.page)\n        },\n        deleteEpisode(id) {\n            this.episodeData.id = id\n            //this.episodeData.userId = this.$session.get('userId')\n            this.deleteEpisodeById(this.episodeData).then( (resp)=> {\n                if (resp) {\n                    this.$swal(\"Deleted\")\n                    this.getEpisodesBySeason(this.page)\n                }\n            }).catch( (err) => {\n                console.log(err)\n            })\n        }\n    },\n    mounted() {\n        this.init()\n    }\n    \n}\n",{"version":3,"sources":["Episodes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Episodes.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div class=\"card-wrapper\">\n<div v-for=\"episode in episodes.content\" :key=\"episode.id\"  class=\"card\">\n    <div class=\"row \">\n        <div class=\"col-md-4\">\n            <img width=\"300\" height=\"180\"  :src=\"episode.episodeImgUrls.thumbnail\" class=\"w-100\">\n        </div>\n        <div class=\"col-md-8 px-3\">\n            <div class=\"card-block col-md-6 px-3\">\n                <router-link :to=\"'#'\"><h3 class=\"card-title\">{{ episode.episodeTitle }}</h3></router-link>\n                <p class=\"card-text\"><b>Episode Number : </b>{{ episode.episodeNumber }}</p>\n                <p class=\"card-text\"><b>Episode Description : </b>{{ episode.episodeDescription }}</p>\n                <p class=\"card-text\"><b>Uploaded on : </b>{{ episode.creationDate }}</p>\n            </div>\n            <div class=\"card-block col-md-3 px-3\">\n                <div class=\"help1\"> </div>\n                <p><button @click=\"deleteEpisode(episode.id)\"  class=\"btn btn-danger\">Remove</button></p>\n                <router-link :to=\"'/seasonVideoForm'\"><button class=\"btn btn-primary\">Edit</button></router-link>\n            </div>\n        </div>\n    </div>\n</div>\n</div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n    name:'Episodes',\n    computed: {\n        ...mapGetters([\n            'episodes'\n        ])\n    },\n    data() {\n        return {\n            page: {\n                seasonId:\"\",\n                pageNumber:0,\n                pageSize:5\n            },\n            episodeData: {\n                id:\"\",\n                // userId:\"\"\n            }\n        }\n    },\n    methods: {\n        ...mapActions([\n            'getEpisodesBySeason',\n            'deleteEpisodeById'\n        ]),\n        init() {\n            this.page.seasonId = this.$route.params.id\n            this.getEpisodesBySeason(this.page)\n        },\n        deleteEpisode(id) {\n            this.episodeData.id = id\n            //this.episodeData.userId = this.$session.get('userId')\n            this.deleteEpisodeById(this.episodeData).then( (resp)=> {\n                if (resp) {\n                    this.$swal(\"Deleted\")\n                    this.getEpisodesBySeason(this.page)\n                }\n            }).catch( (err) => {\n                console.log(err)\n            })\n        }\n    },\n    mounted() {\n        this.init()\n    }\n    \n}\n</script>\n\n<style>\n.card-wrapper {\n    padding:10px;\n}\n.card {\n    border:1px solid black;\n    margin:10px;\n    padding:10px;\n}\n.help {\n    margin-bottom:28%;\n}\n.help1 {\n    margin-bottom:38%;\n}\n</style>\n"]}]}
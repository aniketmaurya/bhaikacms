{"remainingRequest":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/forms/EpisodeForm.vue?vue&type=style&index=0&id=1145bd35&scoped=true&lang=css&","dependencies":[{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/forms/EpisodeForm.vue","mtime":1565089250746},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.box {\n    padding:10px;\n    height:100vh;\n    border-radius: 10px;\n}\n.form-heading {\n    text-align:center;\n    color: #2980B9;\n}\n.float-right {\n    float:right;\n}\n.card {\n    height:165px;\n    padding:10px;\n    margin-top:10px;\n    margin-bottom:10px;\n    border-radius: 10px;\n    /* border: 0.5px solid #333; */\n\tbox-shadow: 0px 8px 20px 0px rgba(0, 0, 0, 0.15);\n}\n.btn-submit {\n    margin:0 auto;\n    display: block;\n}\n",{"version":3,"sources":["EpisodeForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EpisodeForm.vue","sourceRoot":"src/views/forms","sourcesContent":["<template>\n<div class=\"box\">\n    <h2 class=\"form-heading\">EPISODE FORM</h2>\n        <button class=\"btn btn-success\" @click=\"addNewEmployeeForm\">New Episode</button>\n        <div class=\"card mb-3\" v-for=\"(episode,index) in episodes\" :key=\"episode.name\">\n        <div class=\"card-body\" >\n            <span  class=\"float-right\" style=\"cursor:pointer\" @click=\"deleteEmployeeForm(index)\">X</span>\n            <h4 class=\"ard-title\">Episode No {{ index }} </h4>\n            <div class=\"employee-form\">\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <!-- <label>Program type</label> -->\n                        <input v-model=\"season.seasonName\" type=\"text\" class=\"form-control\" required readOnly>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <!-- <label for=\"inputPassword4\">Season name</label> -->\n                        <input v-model=\"episode.episodeTitle\"  type=\"text\" class=\"form-control\" placeholder=\"Episode name\" required>\n                    </div>\n                </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <!-- <label>Program type</label> -->\n                        <input v-model=\"episode.episodeDescription\" type=\"text\" class=\"form-control\" placeholder=\"Description\"  required>\n                    </div>\n                    <div class=\"form-group col-md-6\">\n                        <div class=\"col-md-6\">\n                            <input @change=\"processFile($event,'Thumbnail',index)\" type=\"file\" class=\"form-control\" required>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <input @change=\"processFile($event,'Avatar',index)\" type=\"file\" class=\"form-control\" required>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>  \n    <button @click=\"handleSubmit()\" type=\"submit\" class=\"btn btn-primary btn-submit\">Save episodes</button>\n</div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n    name:'EpisodeForm',\n    data() {\n        return {\n            // getSeason: {},\n            episodes:[\n                {\n                    season: {\n                        id: \"\"\n                    },\n                    episodeNumber:\"\",\n                    episodeTitle:\"\",\n                    episodeDescription:\"\",\n                    episodeVideoUrl:\"\",\n                    episodeImgUrls:{\n                        thumbnail:\"\",\n                        avatar:\"\"\n                    },\n                    crewList:null,\n                } \n            ]\n        }\n    },\n    computed: {\n        ...mapGetters([\n            'season'\n        ])\n    },\n    methods:{\n        ...mapActions([\n            'addEpisodes',\n            'imageUpload'\n        ]),\n        addNewEmployeeForm(){\n            this.episodes.push({\n                season: {\n                        id: \"\"\n                    },\n                    episodeNumber:\"\",\n                    episodeTitle:\"\",\n                    episodeDescription:\"\",\n                    episodeVideoUrl:\"\",\n                    episodesImageUrls:{\n                        thumbnail:\"\",\n                        avatar:\"\"\n                    },\n                    crewList:null,\n            })\n        },\n        deleteEmployeeForm(index) {\n            this.episodes.splice(index, 1)\n        },\n        handleSubmit() {\n            let counter = 1;\n            for(let i in this.episodes) {\n                this.episodes[i].season.id = this.season.id\n                this.episodes[i].episodeNumber = counter++\n            }\n            this.addEpisodes(this.episodes).then( (resp) => {\n                if(resp) { \n                    this.$swal('','Successfully added','success')\n                    this.$router.push('/seasonalVideo')\n                } else {\n                    console.log(\"Something went wrong\")\n                }\n            }).catch( (err) => {\n                console.log(err)\n            })\n        },\n        processFile(event,type,index) {\n            if (type=='Thumbnail') {\n                let formData = new FormData()\n                formData.append('file', event.target.files[0])\n                formData.append('filetype','image')\n                formData.append('type','Thumbnail')\n                this.imageUpload(formData).then( (resp) => {\n                    if(resp.uploadLink) {\n                        this.episodes[index].episodesImageUrls.thumbnail = resp.uploadLink\n                    } else {\n                        this.$swal('File type not supported')\n                    }\n                }).catch( (err) => {\n                    console.log(err)\n                })\n            } else {\n                let formData = new FormData()\n                formData.append('file', event.target.files[0])\n                formData.append('filetype','image')\n                formData.append('type','Avatar')\n                this.imageUpload(formData).then( (resp) => {\n                    if(resp.uploadLink) {\n                        this.episodes[index].episodesImageUrls.avatar = resp.uploadLink\n                    } else {\n                        this.$swal('File type not supported')\n                    }\n                }).catch( (err) => {\n                    console.log(err)\n                })\n            }  \n        },\n        init() {\n            console.log()\n        }\n    },\n    mounted() {\n        this.init()\n    }\n}\n</script>\n\n<style scoped>\n.box {\n    padding:10px;\n    height:100vh;\n    border-radius: 10px;\n}\n.form-heading {\n    text-align:center;\n    color: #2980B9;\n}\n.float-right {\n    float:right;\n}\n.card {\n    height:165px;\n    padding:10px;\n    margin-top:10px;\n    margin-bottom:10px;\n    border-radius: 10px;\n    /* border: 0.5px solid #333; */\n\tbox-shadow: 0px 8px 20px 0px rgba(0, 0, 0, 0.15);\n}\n.btn-submit {\n    margin:0 auto;\n    display: block;\n}\n</style>\n"]}]}
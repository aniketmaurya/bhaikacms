{"remainingRequest":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/babel-loader/lib/index.js!/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/eslint-loader/index.js??ref--13-0!/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/js/userListData.js?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/js/userListData.js","mtime":1566196881910},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { mapGetters, mapActions } from 'vuex';\nimport { throws } from 'assert';\nexport default {\n  name: 'UserListData',\n  props: ['data', 'refresh'],\n  data: function data() {\n    return {\n      newData: {},\n      sendData: {\n        id: \"\",\n        name: \"\",\n        roleId: \"\",\n        isActive: false\n      },\n      editState: false,\n      role: \"\",\n      userName: \"\",\n      deleteData: {\n        idDelete: \"\",\n        id: \"\"\n      },\n      page: {\n        pageNumber: 0,\n        pageSize: 10,\n        sortBy: \"\",\n        order: 0\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters([])),\n  created: function created() {\n    this.newData = this.data;\n    this.userName = this.data.name;\n    this.role = this.data.roleId;\n  },\n  methods: _objectSpread({}, mapActions(['deleteUser', 'getUserList']), {\n    isDataModified: function isDataModified() {\n      if (this.newData.name != this.data.name || this.newData.roleName != this.data.roleName) {\n        this.updateUserData();\n      } // TODO\n      // logic to check if data and newData are different\n\n    },\n    handleDelete: function handleDelete() {\n      var _this = this;\n\n      this.$swal({\n        title: \"Are you sure?\",\n        text: \"\",\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true\n      }).then(function (willDelete) {\n        if (willDelete) {\n          _this.deleteData.idDelete = _this.data.id;\n          _this.deleteData.id = _this.$session.get('userId');\n          console.log(_this.deleteData);\n\n          _this.deleteUser(_this.deleteData).then(function (resp) {\n            if (resp.deleted) {\n              _this.$swal(resp.message);\n\n              _this.getUserList(_this.page);\n            } else {\n              _this.$swal('Not able to delete');\n            }\n          }).catch(function (err) {\n            console.log(err);\n          });\n        } else {\n          _this.$swal(\"Not deleted\");\n        }\n      });\n    },\n    handleActivate: function handleActivate() {\n      var _this2 = this;\n\n      this.deleteData.idDelete = this.data.id;\n      this.deleteData.id = this.$session.get('userId');\n      console.log(this.deleteData);\n      this.deleteUser(this.deleteData).then(function (resp) {\n        if (resp.deleted) {\n          _this2.$swal(resp.message);\n\n          _this2.getUserList(_this2.page);\n        } else {\n          _this2.$swal('Not able to activate');\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    changeIsActive: function changeIsActive(isActive) {\n      if (isActive) return \"Active\";else return \"Not active\";\n    },\n    updateUserData: function updateUserData() {// TODO\n      // call api to update new data\n    },\n    toggleEditState: function toggleEditState() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.editState = !this.editState;\n    },\n    toggleRoleName: function toggleRoleName(roleId) {\n      var roleName = '';\n      roleId === 0 ? roleName = 'Admin' : roleName = 'User'; //console.log(roleName)\n\n      return roleName;\n    },\n    toggleRoleId: function toggleRoleId(id) {\n      var roleId = 0;\n      id === 0 ? roleId = 1 : roleId = 0; //this.tempValueRole= roleId\n\n      return roleId;\n    },\n    checkToggleValue: function checkToggleValue(event) {\n      // check select change\n      console.log('event', event.target);\n    },\n    disableEditing: function disableEditing() {\n      this.editState = !this.editState;\n    },\n    saveEdit: function saveEdit() {\n      var _this3 = this;\n\n      if (this.userName != this.data.name || this.role != this.data.roleId) {\n        this.sendData.name = this.userName;\n        this.sendData.roleId = this.role;\n        this.sendData.id = this.data.id;\n        this.sendData.isActive = this.data.active;\n        this.editState = false, this.$http.post(\"http://172.16.20.78:8080/useradmin/editCredentials\", JSON.stringify(this.sendData)).then(function (response) {\n          return response.json();\n        }).then(function (response) {\n          if (response) {\n            _this3.$swal(\"Updated\");\n\n            _this3.getUserList();\n          }\n        });\n      }\n    }\n  })\n};",{"version":3,"sources":["/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/js/userListData.js"],"names":["mapGetters","mapActions","throws","name","props","data","newData","sendData","id","roleId","isActive","editState","role","userName","deleteData","idDelete","page","pageNumber","pageSize","sortBy","order","computed","created","methods","isDataModified","roleName","updateUserData","handleDelete","$swal","title","text","icon","buttons","dangerMode","then","willDelete","$session","get","console","log","deleteUser","resp","deleted","message","getUserList","catch","err","handleActivate","changeIsActive","toggleEditState","value","toggleRoleName","toggleRoleId","checkToggleValue","event","target","disableEditing","saveEdit","active","$http","post","JSON","stringify","response","json"],"mappings":"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","sourcesContent":["import {mapGetters , mapActions} from 'vuex'\nimport { throws } from 'assert';\nexport default {\n    name: 'UserListData',\n    props: ['data', 'refresh'],\n    data () {\n        return {\n            newData: {},\n            sendData:{\n                id:\"\",\n                name:\"\",\n                roleId:\"\",\n                isActive:false\n            },\n            editState: false,\n            role:\"\",\n            userName:\"\",\n            deleteData : {\n                idDelete:\"\",\n                id:\"\"\n            },\n            page: {\n                pageNumber:0,\n                pageSize:10,\n                sortBy:\"\",\n                order:0,\n            }\n        }\n    },\n    computed:{\n        ...mapGetters([])\n    },\n    created () {\n        this.newData = this.data\n        this.userName=this.data.name\n        this.role=this.data.roleId\n    },\n    methods: {\n        ...mapActions(['deleteUser','getUserList']),\n        isDataModified () {\n            if(this.newData.name!=this.data.name||this.newData.roleName!=this.data.roleName){\n                this.updateUserData()\n            }\n            // TODO\n            // logic to check if data and newData are different\n            \n        },\n        handleDelete() {\n            this.$swal({\n                title: \"Are you sure?\",\n                text: \"\",\n                icon: \"warning\",\n                buttons: true,\n                dangerMode: true,\n              }).then((willDelete) => {\n                if (willDelete) {\n                    this.deleteData.idDelete = this.data.id\n                    this.deleteData.id = this.$session.get('userId')\n                    console.log(this.deleteData)\n                    this.deleteUser(this.deleteData).then( (resp) => {\n                    if(resp.deleted) {\n                        this.$swal(resp.message)\n                        this.getUserList(this.page)\n                    } else {\n                        this.$swal('Not able to delete')\n                    }\n                    }).catch( (err) => {\n                        console.log(err)\n                    })\n                } else {\n                  this.$swal(\"Not deleted\");\n                }\n              })\n        },\n        handleActivate() {\n            this.deleteData.idDelete = this.data.id\n            this.deleteData.id = this.$session.get('userId')\n            console.log(this.deleteData)\n            this.deleteUser(this.deleteData).then( (resp) => {\n            if(resp.deleted) {\n                this.$swal(resp.message)\n                this.getUserList(this.page)\n            } else {\n                this.$swal('Not able to activate')\n            }\n            }).catch( (err) => {\n                console.log(err)\n            })\n        },\n        changeIsActive(isActive) {\n            if(isActive)\n                return \"Active\"\n            else\n                return \"Not active\"\n        },\n        updateUserData () {\n            // TODO\n            // call api to update new data\n        },\n        toggleEditState (value = false) {\n            this.editState = !this.editState\n        },\n        toggleRoleName (roleId) {\n            let roleName = ''\n            roleId === 0 ? roleName = 'Admin' : roleName = 'User'\n            //console.log(roleName)\n            return roleName\n        },\n        toggleRoleId (id) {\n            let roleId = 0\n            id === 0 ? roleId = 1 : roleId=0\n            //this.tempValueRole= roleId\n            return roleId\n        },\n        checkToggleValue(event) {\n            // check select change\n            console.log('event', event.target)\n        },\n        disableEditing(){\n            this.editState=!this.editState\n        },\n        saveEdit(){\n            if(this.userName!=this.data.name||this.role!=this.data.roleId){\n                this.sendData.name=this.userName\n                this.sendData.roleId=this.role\n                this.sendData.id=this.data.id\n                this.sendData.isActive=this.data.active\n                this.editState=false,\n                this.$http.post(\"http://172.16.20.78:8080/useradmin/editCredentials\",JSON.stringify(this.sendData))\n                .then(response => response.json())\n                .then(response => {\n                    if(response){\n                        this.$swal(\"Updated\")\n                        this.getUserList()\n                    }\n                })\n            }\n        }\n    }\n}\n"]}]}
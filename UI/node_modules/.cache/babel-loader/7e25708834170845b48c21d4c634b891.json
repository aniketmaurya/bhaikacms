{"remainingRequest":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/thread-loader/dist/cjs.js!/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/babel-loader/lib/index.js!/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/eslint-loader/index.js??ref--13-0!/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/js/seasons.js?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/js/seasons.js","mtime":1564997928935},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: 'Seasons',\n  computed: _objectSpread({}, mapGetters(['seasons'])),\n  data: function data() {\n    return {\n      page: {\n        programId: \"\",\n        pageNumber: 0,\n        pageSize: 5\n      },\n      seasonData: {\n        id: \"\",\n        userId: \"\"\n      }\n    };\n  },\n  methods: _objectSpread({}, mapActions(['getSeasonByProgram', 'deleteSeasonById']), {\n    init: function init() {\n      this.page.programId = this.$route.params.id;\n      this.getSeasonByProgram(this.page);\n    },\n    deleteProgram: function deleteProgram(id) {\n      var _this = this;\n\n      this.seasonData.id = id;\n      this.seasonData.userId = this.$session.get('userId');\n      this.deleteSeasonById(this.seasonData).then(function (resp) {\n        if (resp) {\n          _this.getSeasonByProgram(_this.page);\n        } else {\n          _this.$swal('Not deleted');\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    nextPage: function nextPage() {\n      if (!this.seasons.last) {\n        this.page.programId = this.$route.params.id;\n        this.page.pageNumber = this.page.pageNumber + 1;\n        this.page.pageSize = 5;\n        this.getSeasonalVideoPrograms(this.page);\n      }\n    },\n    prvPage: function prvPage() {\n      if (!this.seasons.first) {\n        this.page.programId = this.$route.params.id;\n        this.page.pageNumber = this.page.pageNumber - 1;\n        this.page.pageSize = 5;\n        this.getSeasonalVideoPrograms(this.page);\n      }\n    },\n    addNewSeason: function addNewSeason(data) {\n      this.$store.commit('setProgram', data[0].program);\n      this.$router.push('/seasonalVideoForm');\n    }\n  }),\n  mounted: function mounted() {\n    this.init();\n  }\n};",{"version":3,"sources":["/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/js/seasons.js"],"names":["mapGetters","mapActions","name","computed","data","page","programId","pageNumber","pageSize","seasonData","id","userId","methods","init","$route","params","getSeasonByProgram","deleteProgram","$session","get","deleteSeasonById","then","resp","$swal","catch","err","console","log","nextPage","seasons","last","getSeasonalVideoPrograms","prvPage","first","addNewSeason","$store","commit","program","$router","push","mounted"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,UAArB,QAAuC,MAAvC;AACA,eAAe;AACXC,EAAAA,IAAI,EAAC,SADM;AAEXC,EAAAA,QAAQ,oBACDH,UAAU,CAAC,CACV,SADU,CAAD,CADT,CAFG;AAOXI,EAAAA,IAPW,kBAOJ;AACH,WAAO;AACHC,MAAAA,IAAI,EAAE;AACFC,QAAAA,SAAS,EAAC,EADR;AAEFC,QAAAA,UAAU,EAAC,CAFT;AAGFC,QAAAA,QAAQ,EAAC;AAHP,OADH;AAMHC,MAAAA,UAAU,EAAE;AACRC,QAAAA,EAAE,EAAC,EADK;AAERC,QAAAA,MAAM,EAAC;AAFC;AANT,KAAP;AAWH,GAnBU;AAoBXC,EAAAA,OAAO,oBACAX,UAAU,CAAC,CACV,oBADU,EAEV,kBAFU,CAAD,CADV;AAKHY,IAAAA,IALG,kBAKI;AACH,WAAKR,IAAL,CAAUC,SAAV,GAAsB,KAAKQ,MAAL,CAAYC,MAAZ,CAAmBL,EAAzC;AACA,WAAKM,kBAAL,CAAwB,KAAKX,IAA7B;AACH,KARE;AASHY,IAAAA,aATG,yBASWP,EATX,EASe;AAAA;;AACd,WAAKD,UAAL,CAAgBC,EAAhB,GAAqBA,EAArB;AACA,WAAKD,UAAL,CAAgBE,MAAhB,GAAyB,KAAKO,QAAL,CAAcC,GAAd,CAAkB,QAAlB,CAAzB;AACA,WAAKC,gBAAL,CAAsB,KAAKX,UAA3B,EAAuCY,IAAvC,CAA6C,UAACC,IAAD,EAAU;AACnD,YAAGA,IAAH,EAAS;AACL,UAAA,KAAI,CAACN,kBAAL,CAAwB,KAAI,CAACX,IAA7B;AACH,SAFD,MAEO;AACH,UAAA,KAAI,CAACkB,KAAL,CAAW,aAAX;AACH;AACJ,OAND,EAMGC,KANH,CAMU,UAACC,GAAD,EAAS;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OARD;AASH,KArBE;AAsBHG,IAAAA,QAtBG,sBAsBQ;AACP,UAAI,CAAC,KAAKC,OAAL,CAAaC,IAAlB,EAAwB;AACpB,aAAKzB,IAAL,CAAUC,SAAV,GAAsB,KAAKQ,MAAL,CAAYC,MAAZ,CAAmBL,EAAzC;AACA,aAAKL,IAAL,CAAUE,UAAV,GAAuB,KAAKF,IAAL,CAAUE,UAAV,GAAqB,CAA5C;AACA,aAAKF,IAAL,CAAUG,QAAV,GAAqB,CAArB;AACA,aAAKuB,wBAAL,CAA8B,KAAK1B,IAAnC;AACH;AACJ,KA7BE;AA8BH2B,IAAAA,OA9BG,qBA8BO;AACN,UAAI,CAAC,KAAKH,OAAL,CAAaI,KAAlB,EAAyB;AACrB,aAAK5B,IAAL,CAAUC,SAAV,GAAsB,KAAKQ,MAAL,CAAYC,MAAZ,CAAmBL,EAAzC;AACA,aAAKL,IAAL,CAAUE,UAAV,GAAuB,KAAKF,IAAL,CAAUE,UAAV,GAAqB,CAA5C;AACA,aAAKF,IAAL,CAAUG,QAAV,GAAqB,CAArB;AACA,aAAKuB,wBAAL,CAA8B,KAAK1B,IAAnC;AACH;AACJ,KArCE;AAsCH6B,IAAAA,YAtCG,wBAsCU9B,IAtCV,EAsCgB;AACf,WAAK+B,MAAL,CAAYC,MAAZ,CAAmB,YAAnB,EAAgChC,IAAI,CAAC,CAAD,CAAJ,CAAQiC,OAAxC;AACA,WAAKC,OAAL,CAAaC,IAAb,CAAkB,oBAAlB;AACH;AAzCE,IApBI;AAgEXC,EAAAA,OAhEW,qBAgED;AACN,SAAK3B,IAAL;AACH;AAlEU,CAAf","sourcesContent":["import { mapGetters, mapActions } from 'vuex';\nexport default {\n    name:'Seasons',\n    computed: {\n        ...mapGetters([\n            'seasons',\n        ])\n    },\n    data() {\n        return {\n            page: {\n                programId:\"\",\n                pageNumber:0,\n                pageSize:5\n            },\n            seasonData: {\n                id:\"\",\n                userId:\"\"\n            }\n        }\n    },\n    methods: {\n        ...mapActions([\n            'getSeasonByProgram',\n            'deleteSeasonById'\n        ]),\n        init() {\n            this.page.programId = this.$route.params.id\n            this.getSeasonByProgram(this.page)\n        },\n        deleteProgram(id) {\n            this.seasonData.id = id\n            this.seasonData.userId = this.$session.get('userId')\n            this.deleteSeasonById(this.seasonData).then( (resp) => {\n                if(resp) {\n                    this.getSeasonByProgram(this.page)\n                } else {\n                    this.$swal('Not deleted')\n                }\n            }).catch( (err) => {\n                console.log(err)\n            })\n        },\n        nextPage() {\n            if (!this.seasons.last) {\n                this.page.programId = this.$route.params.id\n                this.page.pageNumber = this.page.pageNumber+1\n                this.page.pageSize = 5\n                this.getSeasonalVideoPrograms(this.page)\n            }\n        },\n        prvPage() {\n            if (!this.seasons.first) {\n                this.page.programId = this.$route.params.id\n                this.page.pageNumber = this.page.pageNumber-1\n                this.page.pageSize = 5\n                this.getSeasonalVideoPrograms(this.page)\n            }\n        },\n        addNewSeason(data) {\n            this.$store.commit('setProgram',data[0].program)\n            this.$router.push('/seasonalVideoForm')\n        }\n\n    },\n    mounted() {\n        this.init()\n    }\n    \n}"]}]}
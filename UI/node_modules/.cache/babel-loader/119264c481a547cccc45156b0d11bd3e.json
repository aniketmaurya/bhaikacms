{"remainingRequest":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/babel-loader/lib/index.js!/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/forms/MultiVideoForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/forms/MultiVideoForm.vue","mtime":1565161452196},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: 'MultiVideoForm',\n  data: function data() {\n    return {\n      multiVideo: {\n        program: {\n          id: \"\"\n        },\n        seasonName: \"\",\n        seasonNumber: 0,\n        seasonDescription: \"\",\n        seasonImgUrls: {\n          thumbnail: \"\",\n          avatar: \"\"\n        }\n      }\n    };\n  },\n  methods: _objectSpread({}, mapActions(['addSeason', 'imageUpload']), {\n    handleSubmit: function handleSubmit() {\n      var _this = this;\n\n      this.multiVideo.program.id = this.program.id;\n      this.addSeason(this.multiVideo).then(function (resp) {\n        if (resp) {\n          _this.$swal('', 'Successfully added', 'success');\n\n          _this.$router.push('/episodeForm');\n        } else {\n          console.log(\"Something went wrong\");\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    processFile: function processFile(event, type) {\n      var _this2 = this;\n\n      if (type == 'Thumbnail') {\n        var formData = new FormData();\n        formData.append('file', event.target.files[0]);\n        formData.append('filetype', 'image');\n        formData.append('type', 'Thumbnail');\n        this.imageUpload(formData).then(function (resp) {\n          if (resp.uploadLink) {\n            _this2.multiVideo.seasonImgUrls.thumbnail = resp.uploadLink;\n          } else {\n            _this2.$swal(resp.message);\n          }\n        }).catch(function (err) {\n          console.log(err);\n        });\n      } else {\n        var _formData = new FormData();\n\n        _formData.append('file', event.target.files[0]);\n\n        _formData.append('filetype', 'image');\n\n        _formData.append('type', 'Avatar');\n\n        this.imageUpload(_formData).then(function (resp) {\n          if (resp.uploadLink) {\n            _this2.multiVideo.seasonImgUrls.avatar = resp.uploadLink;\n          } else {\n            _this2.$swal(resp.message);\n          }\n        }).catch(function (err) {\n          console.log(err);\n        });\n      }\n    }\n  }),\n  computed: _objectSpread({}, mapGetters(['program']))\n};",{"version":3,"sources":["MultiVideoForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"box\">\n    <form class=\"program-form\" style=\"padding:15px;\" @submit.prevent=\"handleSubmit()\">\n        <h2 class=\"form-heading\">MULTI VIDEO FORM</h2>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n                <label>Program type</label>\n                <input v-model=\"program.type\" type=\"text\" class=\"form-control \" required readOnly>\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label for=\"inputPassword4\">Title</label>\n                <input v-model=\"multiVideo.seasonName\"  type=\"text\" class=\"form-control\" required>\n            </div>\n        </div>\n        <div class=\"form-group col-md-12\">\n            <label for=\"inputAddress\">Description</label>\n            <input v-model=\"multiVideo.seasonDescription\" type=\"text\" class=\"form-control\" required>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n                <label>Thumbnail</label>\n                <input @change=\"processFile($event,'Thumbnail')\" type=\"file\" class=\"form-control\" required>\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label>Avatar</label>\n                <input @change=\"processFile($event,'Avatar')\" type=\"file\" class=\"form-control\" required>\n            </div>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Save video</button>\n    </form>\n</div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nexport default {\n    name:'MultiVideoForm',\n    data() {\n       return {\n           multiVideo: {\n               program: {\n                   id: \"\"\n               },\n               seasonName:\"\",\n               seasonNumber:0,\n               seasonDescription:\"\",\n               seasonImgUrls:{\n                   thumbnail: \"\",\n                    avatar: \"\",\n               }\n           }\n       }\n    },\n    methods: {\n        ...mapActions([\n            'addSeason',\n            'imageUpload'\n        ]),\n        handleSubmit() {\n            this.multiVideo.program.id = this.program.id\n\n            this.addSeason(this.multiVideo).then( (resp) => {\n                if(resp) {\n                    this.$swal('','Successfully added','success')\n                    this.$router.push('/episodeForm')\n                } else {\n                    console.log(\"Something went wrong\")\n                }\n            }).catch((err) => {\n                console.log(err)\n            })\n        },\n         processFile(event,type) {\n            if (type=='Thumbnail') {\n                let formData = new FormData()\n                formData.append('file', event.target.files[0])\n                formData.append('filetype','image')\n                formData.append('type','Thumbnail')\n                this.imageUpload(formData).then( (resp) => {\n                    if(resp.uploadLink) {\n                        this.multiVideo.seasonImgUrls.thumbnail = resp.uploadLink\n                    } else {\n                        this.$swal(resp.message)\n                    }\n                }).catch( (err) => {\n                    console.log(err)\n                })\n            } else {\n                let formData = new FormData()\n                formData.append('file', event.target.files[0])\n                formData.append('filetype','image')\n                formData.append('type','Avatar')\n                this.imageUpload(formData).then( (resp) => {\n                    if(resp.uploadLink) {\n                        this.multiVideo.seasonImgUrls.avatar = resp.uploadLink\n                    } else {\n                        this.$swal(resp.message)\n                    }\n                }).catch( (err) => {\n                    console.log(err)\n                })\n            }\n        }\n\n    },\n    computed: {\n        ...mapGetters([\n            'program'\n        ])\n    }\n    \n}\n</script>\n\n<style>\n.box {\n    padding:20px;\n    margin:20px;\n    border-radius: 10px;\n\tbox-shadow: 0px 8px 20px 0px rgba(0, 0, 0, 0.15);\n}\n.form-heading {\n    text-align:center;\n    color: #2980B9;\n}\n</style>\n"],"sourceRoot":"src/views/forms"}]}
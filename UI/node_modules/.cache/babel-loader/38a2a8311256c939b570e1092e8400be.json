{"remainingRequest":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/babel-loader/lib/index.js!/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/eslint-loader/index.js??ref--13-0!/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/js/program.js?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/js/program.js","mtime":1565182872872},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport VueTagsInput from '@johmun/vue-tags-input';\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'Program',\n  computed: _objectSpread({}, mapGetters(['languages', 'getStackOfCategories', 'crewRoles'])),\n  components: {\n    VueTagsInput: VueTagsInput\n  },\n  data: function data() {\n    return {\n      inputArray: [],\n      program: {\n        type: \"\",\n        name: \"\",\n        description: \"\",\n        keywords: \"\",\n        parentalRating: \"\",\n        languages: \"\",\n        startDate: \"\",\n        expiryDate: \"\",\n        category: {\n          id: \"\"\n        },\n        imgUrls: {\n          thumbnail: \"\",\n          avatar: \"\"\n        },\n        userId: null,\n        userEmail: \"\",\n        crewList: {}\n      },\n      tag: '',\n      tags: []\n    };\n  },\n  methods: _objectSpread({}, mapActions(['addProgram', 'imageUpload', 'getLanguages', 'getCrewRoles']), {\n    init: function init() {\n      if (this.$route.params.name == \"singleVideo\") {\n        this.program.type = \"Single video program\";\n      } else if (this.$route.params.name == \"multiVideo\") {\n        this.program.type = \"Multi video program\";\n      } else {\n        this.program.type = \"Seasonal video program\";\n      }\n\n      this.getLanguages();\n      this.getCrewRoles();\n    },\n    handleSubmit: function handleSubmit() {\n      var _this = this;\n\n      //change date to long\n      this.program.startDate = this.convertDateToLong(new Date(this.program.startDate));\n      this.program.expiryDate = this.convertDateToLong(new Date(this.program.expiryDate));\n      this.program.userId = this.$session.get('userId');\n      this.program.userEmail = this.$session.get('email'); // this.program.category.\n\n      for (var i = 0; i < this.tags.length; i++) {\n        if (i == 0) {\n          this.program.keywords = this.tags[i].text;\n        }\n\n        this.program.keywords = this.program.keywords + ',' + this.tags[i].text;\n      } // let index =1\n      // this.program.crewList[index] = \"xyz\"\n      // console.log(this.program.crewList)\n\n\n      console.log(this.inputArray);\n      this.inputArray.forEach(function (input) {\n        var index = input.role;\n        console.log(index);\n        _this.program.crewList[index] = input.roleName;\n      });\n      console.log(this.program.crewList); //adding program to database \n\n      this.addProgram(this.program).then(function (resp) {\n        _this.$swal('', 'Successfully added', 'success');\n\n        if (_this.$route.params.name == \"singleVideo\") {\n          _this.$router.push('/singleVideoForm');\n        }\n\n        if (_this.$route.params.name == \"multiVideo\") {\n          _this.$router.push('/multiVideoForm');\n        }\n\n        if (_this.$route.params.name == \"seasonalVideo\") {\n          _this.$router.push('/seasonalVideoForm');\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    convertDateToLong: function convertDateToLong(date) {\n      return date.getTime();\n    },\n    processFile: function processFile(event, type) {\n      var _this2 = this;\n\n      if (type == 'Thumbnail') {\n        var formData = new FormData();\n        formData.append('file', event.target.files[0]);\n        formData.append('filetype', 'image');\n        formData.append('type', 'Thumbnail');\n        this.imageUpload(formData).then(function (resp) {\n          if (resp.uploadLink != \"\") {\n            _this2.program.imgUrls.thumbnail = resp.uploadLink;\n          } else {\n            _this2.$swal(resp.message);\n          }\n        }).catch(function (err) {\n          console.log(err);\n        });\n      } else {\n        var _formData = new FormData();\n\n        _formData.append('file', event.target.files[0]);\n\n        _formData.append('filetype', 'image');\n\n        _formData.append('type', 'Avatar');\n\n        this.imageUpload(_formData).then(function (resp) {\n          if (resp.uploadLink) {\n            _this2.program.imgUrls.avatar = resp.uploadLink;\n          } else {\n            _this2.$swal(resp.message);\n          }\n        }).catch(function (err) {\n          console.log(err);\n        });\n      }\n    },\n    handleCancel: function handleCancel() {\n      this.$router.go(-1);\n    },\n    addInput: function addInput() {\n      var input = {\n        role: '',\n        roleName: ''\n      };\n      this.inputArray.push(input);\n    },\n    removeInput: function removeInput(index) {\n      this.inputArray.splice(index, 1);\n    }\n  }),\n  mounted: function mounted() {\n    this.init();\n  }\n};",{"version":3,"sources":["/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/js/program.js"],"names":["VueTagsInput","mapActions","mapGetters","name","computed","components","data","inputArray","program","type","description","keywords","parentalRating","languages","startDate","expiryDate","category","id","imgUrls","thumbnail","avatar","userId","userEmail","crewList","tag","tags","methods","init","$route","params","getLanguages","getCrewRoles","handleSubmit","convertDateToLong","Date","$session","get","i","length","text","console","log","forEach","input","index","role","roleName","addProgram","then","resp","$swal","$router","push","catch","err","date","getTime","processFile","event","formData","FormData","append","target","files","imageUpload","uploadLink","message","handleCancel","go","addInput","removeInput","splice","mounted"],"mappings":"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","sourcesContent":["\nimport VueTagsInput from '@johmun/vue-tags-input';\n\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n    name:'Program',\n    computed:{\n        ...mapGetters([\n            'languages',\n            'getStackOfCategories',\n            'crewRoles'\n        ])\n    },\n    components:{\n        VueTagsInput\n    },\n    data() {\n        return {\n            inputArray: [],\n            program: {\n                type:\"\",\n                name:\"\",\n                description:\"\",\n                keywords:\"\",\n                parentalRating:\"\",\n                languages:\"\",\n                startDate:\"\",\n                expiryDate:\"\",\n                category: {\n                  id:\"\",\n                },\n                imgUrls: {\n                    thumbnail: \"\",\n                    avatar: \"\",\n                },\n                userId:null,\n                userEmail:\"\",\n                crewList: {\n        \n                }\n            },\n            tag:'',\n            tags: [],\n        }\n    },\n    methods: {\n        ...mapActions([\n            'addProgram',\n            'imageUpload',\n            'getLanguages',\n            'getCrewRoles'\n        ]),\n        init() {\n            if (this.$route.params.name == \"singleVideo\") {\n                this.program.type = \"Single video program\"\n            }\n            else if (this.$route.params.name == \"multiVideo\") {\n                this.program.type = \"Multi video program\"\n            }\n            else {\n                this.program.type = \"Seasonal video program\"\n            }\n            this.getLanguages()\n            this.getCrewRoles()\n        },\n        handleSubmit() {\n            //change date to long\n            this.program.startDate = this.convertDateToLong(new Date(this.program.startDate))\n            this.program.expiryDate = this.convertDateToLong(new Date(this.program.expiryDate))\n            this.program.userId = this.$session.get('userId')\n            this.program.userEmail = this.$session.get('email')\n            // this.program.category.\n             \n            for(let i=0;i<this.tags.length;i++) {\n                if(i==0) {\n                    this.program.keywords = this.tags[i].text\n                }\n                this.program.keywords  = this.program.keywords+','+this.tags[i].text\n            }\n            // let index =1\n            // this.program.crewList[index] = \"xyz\"\n            // console.log(this.program.crewList)\n            console.log(this.inputArray)\n            this.inputArray.forEach(input => {\n                let index = input.role\n                console.log(index)\n                this.program.crewList[index] = input.roleName\n            })\n            console.log(this.program.crewList)\n\n            //adding program to database \n            this.addProgram(this.program).then( (resp) => {\n                this.$swal('','Successfully added','success')\n                if (this.$route.params.name == \"singleVideo\") {\n                    this.$router.push('/singleVideoForm')\n                }\n                if (this.$route.params.name == \"multiVideo\") {\n                    this.$router.push('/multiVideoForm')\n                }\n                if (this.$route.params.name == \"seasonalVideo\") {\n                    this.$router.push('/seasonalVideoForm')\n                }\n            }).catch( (err) => {\n                console.log(err)\n            })\n\n        },\n        convertDateToLong(date) {\n            return date.getTime()\n        },\n        processFile(event,type) {\n            if (type=='Thumbnail') {\n                let formData = new FormData()\n                formData.append('file', event.target.files[0])\n                formData.append('filetype','image')\n                formData.append('type','Thumbnail')\n                this.imageUpload(formData).then( (resp) => {\n                    if(resp.uploadLink!=\"\") {\n                        this.program.imgUrls.thumbnail = resp.uploadLink\n                    } else {\n                        this.$swal(resp.message)\n                    }\n                }).catch( (err) => {\n                    console.log(err)\n                })\n            } else {\n                let formData = new FormData()\n                formData.append('file', event.target.files[0])\n                formData.append('filetype','image')\n                formData.append('type','Avatar')\n                this.imageUpload(formData).then( (resp) => {\n                    if(resp.uploadLink) {\n                        this.program.imgUrls.avatar = resp.uploadLink\n                    } else {\n                        this.$swal(resp.message)\n                    }\n                }).catch( (err) => {\n                    console.log(err)\n                })\n            }\n             \n        },\n        handleCancel() {\n            this.$router.go(-1)\n        },\n        addInput() {\n            const input = {\n                role: '',\n                roleName: ''\n            }\n            this.inputArray.push(input)\n        },\n        removeInput(index) {\n            this.inputArray.splice(index, 1)\n        }\n\n    },\n    mounted() {\n        this.init()\n    }\n    \n}"]}]}
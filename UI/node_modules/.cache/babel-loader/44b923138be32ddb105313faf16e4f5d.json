{"remainingRequest":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/babel-loader/lib/index.js!/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/eslint-loader/index.js??ref--13-0!/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/js/userList.js?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/js/userList.js","mtime":1566196526538},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/sumansaurav/Desktop/bhaikacms/UI/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { mapGetters, mapActions } from 'vuex';\nimport UserListData from '@/views/UserListData';\nexport default {\n  name: 'UserList',\n  data: function data() {\n    return {\n      page: {\n        pageNumber: 0,\n        pageSize: 10,\n        sortBy: \"\",\n        order: 0\n      },\n      deleteData: {\n        idDelete: \"\",\n        id: \"\"\n      },\n      tempValue: null,\n      editing: false,\n      currentPage: 1\n    };\n  },\n  components: {\n    UserListData: UserListData\n  },\n  computed: _objectSpread({}, mapGetters(['userList', 'userListEdit'])),\n  methods: _objectSpread({}, mapActions(['getUserList', 'deleteUser', 'searchUser']), {\n    init: function init() {\n      if (this.$session.get('roleId') === 0) {\n        this.$router.push('/');\n      }\n\n      this.getUserList(this.page);\n    },\n    refresh: function refresh() {// TODO\n      // call api to fetch all data\n      //this.init();\n    },\n    // chanegRoleName(roleId) {\n    //     if (roleId === 0)\n    //        return \"User\"\n    //     else\n    //        return \"Admin\"\n    // },\n    // checkToggleValue(event) {\n    //     // check select change\n    //     console.log('event', event.target)\n    // }, \n    // changeIsActive(isActive) {\n    //     if(isActive)\n    //         return \"Active\"\n    //     else\n    //         return \"Not active\"\n    // },\n    nextPage: function nextPage() {\n      if (this.page.pageNumber < this.userList.totalPages - 1) {\n        this.page.pageNumber = this.page.pageNumber + 1;\n        this.currentPage = this.currentPage + 1;\n        this.page.pageSize = 10;\n        this.getUserList(this.page);\n      }\n    },\n    prvPage: function prvPage() {\n      if (this.page.pageNumber != 0) {\n        this.page.pageNumber = this.page.pageNumber - 1;\n        if (this.currentPage != 0) this.currentPage = this.currentPage - 1;\n        this.page.pageSize = 10;\n        this.getUserList(this.page);\n      }\n    },\n    // handleDelete(id) {\n    //     this.$swal({\n    //         title: \"Are you sure?\",\n    //         text: \"\",\n    //         icon: \"warning\",\n    //         buttons: true,\n    //         dangerMode: true,\n    //       }).then((willDelete) => {\n    //         if (willDelete) {\n    //             this.deleteData.idDelete = id\n    //             this.deleteData.id = this.$session.get('userId')\n    //             console.log(this.deleteData)\n    //             this.deleteUser(this.deleteData).then( (resp) => {\n    //             if(resp.deleted) {\n    //                 this.$swal(resp.message)\n    //                 this.getUserList(this.page)\n    //             } else {\n    //                 this.$swal('Not able to deactivae')\n    //             }\n    //             }).catch( (err) => {\n    //                 console.log(err)\n    //             })\n    //         } else {\n    //           this.$swal(\"Not deactivated\");\n    //         }\n    //       })\n    // },\n    // handleActivate(id) {\n    //     this.deleteData.idDelete = id\n    //     this.deleteData.id = this.$session.get('userId')\n    //     console.log(this.deleteData)\n    //     this.deleteUser(this.deleteData).then( (resp) => {\n    //     if(resp.deleted) {\n    //         this.$swal(resp.message)\n    //         this.getUserList(this.page)\n    //     } else {\n    //         this.$swal('Not able to activate')\n    //     }\n    //     }).catch( (err) => {\n    //         console.log(err)\n    //     })\n    // },\n    // enableEditing: function(value) {\n    //     this.tempValue = value;\n    //     this.editing = true;\n    // },\n    // disableEditing: function() {\n    //     this.tempValue = null;\n    //     this.editing = false;\n    // },\n    // saveEdit: function() {\n    //     this.value = this.tempValue;\n    //     this.disableEditing();\n    //     //function call to save the details\n    // },\n    sort: function sort(name) {\n      this.page.sortBy = name;\n      if (this.page.order == 0) this.page.order = 1;else this.page.order = 0;\n      this.getUserList(this.page);\n    },\n    handleSubmit: function handleSubmit() {\n      this.searchUser(this.page);\n    }\n  }),\n  mounted: function mounted() {\n    this.init();\n  }\n};",{"version":3,"sources":["/Users/sumansaurav/Desktop/bhaikacms/UI/src/views/js/userList.js"],"names":["mapGetters","mapActions","UserListData","name","data","page","pageNumber","pageSize","sortBy","order","deleteData","idDelete","id","tempValue","editing","currentPage","components","computed","methods","init","$session","get","$router","push","getUserList","refresh","nextPage","userList","totalPages","prvPage","sort","handleSubmit","searchUser","mounted"],"mappings":"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","sourcesContent":["import { mapGetters, mapActions } from 'vuex'\nimport UserListData from '@/views/UserListData'\nexport default {\n    name:'UserList',\n    data() {\n        return {\n            page: {\n                pageNumber:0,\n                pageSize:10,\n                sortBy:\"\",\n                order:0,\n            },\n            deleteData : {\n                idDelete:\"\",\n                id:\"\"\n            },\n            tempValue: null,\n            editing: false,\n            currentPage:1,\n        }\n    },\n    components:{\n        UserListData,\n    },\n    computed: {\n        ...mapGetters([\n            'userList',\n            'userListEdit'\n        ])\n    },\n    methods: {\n        ...mapActions([\n            'getUserList',\n            'deleteUser',\n            'searchUser'\n        ]),\n        init() {\n            if(this.$session.get('roleId') === 0) {\n                this.$router.push('/')\n            }\n            this.getUserList(this.page)\n        },\n        refresh () {\n            // TODO\n            // call api to fetch all data\n            //this.init();\n        },\n        // chanegRoleName(roleId) {\n        //     if (roleId === 0)\n        //        return \"User\"\n        //     else\n        //        return \"Admin\"\n        // },\n        // checkToggleValue(event) {\n        //     // check select change\n        //     console.log('event', event.target)\n        // }, \n        // changeIsActive(isActive) {\n        //     if(isActive)\n        //         return \"Active\"\n        //     else\n        //         return \"Not active\"\n        // },\n        nextPage() {\n            if(this.page.pageNumber < this.userList.totalPages-1)\n            {\n                this.page.pageNumber = this.page.pageNumber+1\n                this.currentPage = this.currentPage+1    \n                this.page.pageSize = 10\n                this.getUserList(this.page)\n            }\n        },\n        prvPage() {\n            if (this.page.pageNumber!=0) {\n                this.page.pageNumber = this.page.pageNumber-1\n                if(this.currentPage!=0)\n                    this.currentPage = this.currentPage-1\n                this.page.pageSize = 10\n                this.getUserList(this.page)\n            }\n        },\n        // handleDelete(id) {\n        //     this.$swal({\n        //         title: \"Are you sure?\",\n        //         text: \"\",\n        //         icon: \"warning\",\n        //         buttons: true,\n        //         dangerMode: true,\n        //       }).then((willDelete) => {\n        //         if (willDelete) {\n        //             this.deleteData.idDelete = id\n        //             this.deleteData.id = this.$session.get('userId')\n        //             console.log(this.deleteData)\n        //             this.deleteUser(this.deleteData).then( (resp) => {\n        //             if(resp.deleted) {\n        //                 this.$swal(resp.message)\n        //                 this.getUserList(this.page)\n        //             } else {\n        //                 this.$swal('Not able to deactivae')\n        //             }\n        //             }).catch( (err) => {\n        //                 console.log(err)\n        //             })\n        //         } else {\n        //           this.$swal(\"Not deactivated\");\n        //         }\n        //       })\n        // },\n        // handleActivate(id) {\n        //     this.deleteData.idDelete = id\n        //     this.deleteData.id = this.$session.get('userId')\n        //     console.log(this.deleteData)\n        //     this.deleteUser(this.deleteData).then( (resp) => {\n        //     if(resp.deleted) {\n        //         this.$swal(resp.message)\n        //         this.getUserList(this.page)\n        //     } else {\n        //         this.$swal('Not able to activate')\n        //     }\n        //     }).catch( (err) => {\n        //         console.log(err)\n        //     })\n        // },\n        // enableEditing: function(value) {\n        //     this.tempValue = value;\n        //     this.editing = true;\n        // },\n        // disableEditing: function() {\n        //     this.tempValue = null;\n        //     this.editing = false;\n        // },\n        // saveEdit: function() {\n        //     this.value = this.tempValue;\n        //     this.disableEditing();\n        //     //function call to save the details\n        // },\n        sort(name) {\n            this.page.sortBy = name\n            if(this.page.order==0)\n               this.page.order=1\n            else\n               this.page.order=0\n            this.getUserList(this.page)\n        },\n        handleSubmit() {\n            this.searchUser(this.page)\n        },\n    },\n    mounted() {\n        this.init()\n    }\n}\n\n"]}]}